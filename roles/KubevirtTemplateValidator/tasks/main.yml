---
# tasks file for KubevirtTemplateValidator
- name: Set template:view role
  k8s:
    state: present
    definition: "{{ lookup('template', 'template-view-role.yaml.j2') | from_yaml }}"
- name: Create the service
  k8s:
    state: present
    definition: "{{ item | from_yaml }}"
  with_items: "{{ lookup('template', 'service.yaml.j2').split('\n---\n') | select('search', '(^|\n)[^#]') | list }}"
  register: tv
- name: Register the webhook
  k8s:
    state: present
    definition: "{{ lookup('template', 'webhook.yaml.j2') | from_yaml }}"
# per https://docs.okd.io/latest/dev_guide/secrets.html#service-serving-certificate-secrets
# *every* pod in the cluster has access to the service-ca.crt, so we can safely use
# the one inside the operator POD

# TODO -- remove vvv
- name: Start webhook-updater
  command:
    argv: ["/usr/bin/run-webhook-updater.sh",
           "--webhook", "virt-template-validator",
           "--dir", "/var/run/secrets/kubernetes.io/serviceaccount",
           "--file", "service-ca.crt"]
- name: Refresh template-validator var
  set_fact:
    tv_status: "{{ lookup('k8s', kind=tv.results[3].result.kind, namespace=tv.results[3].result.metadata.namespace, resource_name=tv.results[3].result.metadata.name) | from_yaml }}"

# defaults in this ansible code are here because at the start of deployment, there is a chance 
# there will be no attributes like availableReplicas and readyReplicas
- name: Set progressing condition
  operator_sdk.util.k8s_status:
    api_version: ssp.kubevirt.io/v1
    kind: KubevirtTemplateValidator
    name: "{{ meta.name }}"
    namespace: "{{ meta.namespace }}"
    conditions:
    - type: Progressing
      status: "{{ 'True' if tv_status.status.availableReplicas|default(0) != tv_status.status.readyReplicas|default(2) else 'False' }}"
      reason: "progressing"
      message: "Template-validator is progressing."

- name:  "Wait for the template-validator to start"
  k8s_info:
    api_version: v1
    kind: "{{ tv_status.kind }}"
    name: "{{ tv_status.metadata.name }}"
    namespace: "{{ tv_status.metadata.namespace }}"
  register: tv_status
  delay: 10
  retries: 300
  until: tv_status.resources[0].status.availableReplicas|default(0) == tv_status.resources[0].status.readyReplicas|default(2) | default(false)


- name: Set available condition
  operator_sdk.util.k8s_status:
    api_version: ssp.kubevirt.io/v1
    kind: KubevirtTemplateValidator
    name: "{{ meta.name }}"
    namespace: "{{ meta.namespace }}"
    conditions:
    - type: Available
      status: "{{ 'True' if tv_status.resources[0].status.availableReplicas|default(0) == tv_status.resources[0].status.readyReplicas|default(2) else 'False' }}"
      reason: "available"
      message: "Template-validator is available."

- name: Set degraded condition
  operator_sdk.util.k8s_status:
    api_version: ssp.kubevirt.io/v1
    kind: KubevirtTemplateValidator
    name: "{{ meta.name }}"
    namespace: "{{ meta.namespace }}"
    conditions:
    - type: Degraded
      status: "{{ 'True' if tv_status.resources[0].status.availableReplicas|default(0) != tv_status.resources[0].status.readyReplicas|default(2) else 'False' }}"
      reason: "degraded"
      message: "Template-validator is degraded."
